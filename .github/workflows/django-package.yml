name: "Lint and test"

on:
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ./testproject
      DJANGO_SETTINGS_MODULE: settings
      SECRET_KEY: this_is_no_secret_at_all
    strategy:
      fail-fast: false
      matrix:
        include:
          # Python 3.9 supports Django 3.2, 4.0, 4.1, 4.2
          - python-version: "3.9"
            django-version: "3.2.25"
          - python-version: "3.9"
            django-version: "4.0.10"
          - python-version: "3.9"
            django-version: "4.1.13"
          - python-version: "3.9"
            django-version: "4.2.16"
          # Python 3.10 supports Django 3.2, 4.0, 4.1, 4.2, 5.0
          - python-version: "3.10"
            django-version: "3.2.25"
          - python-version: "3.10"
            django-version: "4.0.10"
          - python-version: "3.10"
            django-version: "4.1.13"
          - python-version: "3.10"
            django-version: "4.2.16"
          - python-version: "3.10"
            django-version: "5.0.10"
          # Python 3.11 supports Django 4.1, 4.2, 5.0, 5.1
          - python-version: "3.11"
            django-version: "4.1.13"
          - python-version: "3.11"
            django-version: "4.2.16"
          - python-version: "3.11"
            django-version: "5.0.10"
          - python-version: "3.11"
            django-version: "5.1.10"
          # Python 3.12 supports Django 4.2, 5.0, 5.1, 5.2
          - python-version: "3.12"
            django-version: "4.2.16"
          - python-version: "3.12"
            django-version: "5.0.10"
          - python-version: "3.12"
            django-version: "5.1.10"
          - python-version: "3.12"
            django-version: "5.2.10"
          # Python 3.13 supports Django 5.0, 5.1, 5.2
          - python-version: "3.13"
            django-version: "5.0.10"
          - python-version: "3.13"
            django-version: "5.1.10"
          - python-version: "3.13"
            django-version: "5.2.10"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install mypy flake8 pytest pytest-xdist flaky
          python -m pip install Django==${{ matrix.django-version }}
          if [ -f trench/test-requirements.txt ]; then pip install -r trench/test-requirements.txt; fi
          ln -s $(pwd)/trench/ $(pwd)/testproject/trench
      - name: Lint trench package with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 ./trench/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide.
          flake8 ./trench/ --count --exit-zero --max-complexity=10 --statistics
      - name: Check trench package's type hints with mypy
        run: |
          mypy ./trench/
      - name: Lint testproject with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 ./testproject/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide.
          flake8 ./testproject/ --count --exit-zero --max-complexity=10 --statistics
      - name: Check testproject's type hints with mypy
        run: |
          mypy ./testproject/
      - name: Test with pytest
        run: |
          python -m pytest -n 8 --cov-report=xml --cov=testproject/trench testproject/tests/
    # - uses: codecov/codecov-action@v1
    #   with:
    #     files: ./coverage.xml
    #     fail_ci_if_error: true
    #     name: trench
    #     verbose: true
